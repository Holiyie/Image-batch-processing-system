# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtGui import QBrush,QPixmap
import renamegai,WaterMark # 导入模块

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(507, 270)
        font = QtGui.QFont()
        font.setFamily("方正舒体")
        font.setPointSize(18)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("image/title.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(180, 60, 121, 51))
        font = QtGui.QFont()
        font.setFamily("方正舒体")
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setAutoFillBackground(False)
        self.pushButton.setStyleSheet("background-color: rgb(100, 149, 237);color: rgb(244, 255, 244);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(180, 130, 121, 51))
        font = QtGui.QFont()
        font.setFamily("方正舒体")
        font.setPointSize(14)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-color: rgb(100, 149, 237);color: rgb(247, 254, 255);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(352, 190, 131, 31))
        font = QtGui.QFont()
        font.setFamily("方正舒体")
        font.setPointSize(14)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("background-color: rgb(100, 149, 237);color: rgb(240, 253, 255);")
        self.pushButton_3.setObjectName("pushButton_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        palette = QtGui.QPalette()
        # 设置窗体背景自适应
        palette.setBrush(MainWindow.backgroundRole(), QBrush(QPixmap("image/back.png").scaled(MainWindow.size(), QtCore.Qt.IgnoreAspectRatio,QtCore.Qt.SmoothTransformation)))
        MainWindow.setPalette(palette)
        MainWindow.setAutoFillBackground(True)  # 设置自动填充背景

        self.retranslateUi(MainWindow)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "图片批量处理器"))
        self.pushButton.setText(_translate("MainWindow", "添加水印"))
        self.pushButton_2.setText(_translate("MainWindow", "重命名"))
        self.pushButton_3.setText(_translate("MainWindow", "软件介绍"))

        # 水印界面
        self.pushButton.clicked.connect(self.openMark)
        # 重命名界面
        self.pushButton_2.clicked.connect(self.openRename)
        # 软件介绍
        self.pushButton_3.clicked.connect(self.about)

    # 打开水印窗体

    def openMark(self):
        self.another = WaterMark.Ui_MainWindow()  # 创建水印窗体对象
        self.another.show()  # 显示窗体

     # 打开重命名窗体

    def openRename(self):
        self.another = renamegai.window()  # 创建重命名窗体对象
        #self.another.mainloop()#事件循环

    # 关于本软件

    def about(self):
        QMessageBox.information(None, '关于本软件', '图片批量处理器是一款提供日常工作的工具软件，'
                                               '通过该软件，您可以方便的为图片添加文字水印和图片水印，'
                                               '而且可以自定义添加位置，以及透明度；另外，您还可以通过'
                                               '该软件对图片文件进行重命名，支持文件名大写、小写，以及'
                                               '根据自定义模板对图片文件进行编号。', QMessageBox.Ok)

# 主方法
if __name__ == '__main__':
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()  # 创建窗体对象
    ui = Ui_MainWindow()  # 创建PyQt5设计的窗体对象
    ui.setupUi(MainWindow)  # 调用PyQt5窗体的方法对窗体对象进行初始化设置
    MainWindow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程